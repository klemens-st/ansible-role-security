---
- name: Ensure SSH daemon is running.
  service:
    name: "{{ security_sshd_name }}"
    state: "{{ security_sshd_state }}"

- name: Update SSH configuration to be more secure.
  ansible.builtin.template:
    src: 01-ansible-hardening.conf.j2
    dest: "{{ security_ssh_config_path }}/01-ansible-hardening.conf"
    validate: 'sshd -T -f %s'
    mode: 0644
    owner: root
    group: root
  notify: "{{ security_sshd_handlers }}"

- name: Add configured users allowed to connect over ssh
  ansible.builtin.lineinfile:
    dest: "{{ security_ssh_config_path }}/01-ansible-ssh-users.conf"
    regexp: '^AllowUsers'
    line: "AllowUsers {{ security_ssh_allowed_users | join(' ') }}"
    state: present
    create: true
    validate: 'sshd -T -f %s'
    mode: 0644
    owner: root
    group: root
  when: security_ssh_allowed_users | length > 0
  notify: restart ssh

- name: Add configured groups allowed to connect over ssh
  ansible.builtin.lineinfile:
    dest: "{{ security_ssh_config_path }}/01-ansible-ssh-groups.conf"
    regexp: '^AllowGroups'
    line: "AllowGroups {{ security_ssh_allowed_groups | join(' ') }}"
    state: present
    create: true
    validate: 'sshd -T -f %s'
    mode: 0644
    owner: root
    group: root
  when: security_ssh_allowed_groups | length > 0
  notify: restart ssh

- name: Add configured user accounts to passwordless sudoers.
  ansible.builtin.template:
    src: passwordless.j2
    dest: /etc/sudoers.d/passwordless
    validate: 'visudo -cf %s'
    mode: 0640
    owner: root
    group: root
  with_items: "{{ security_sudoers_passwordless }}"
  when: security_sudoers_passwordless | length > 0

- name: Add configured user accounts to passworded sudoers.
  ansible.builtin.template:
    src: passworded.j2
    dest: /etc/sudoers.d/passworded
    validate: 'visudo -cf %s'
    mode: 0640
    owner: root
    group: root
  with_items: "{{ security_sudoers_passworded }}"
  when: security_sudoers_passworded | length > 0
